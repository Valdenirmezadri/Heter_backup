# modulo rsync para nuvem
rsync_nuvem(){

config
header
checkVar

verifica(){
RODANDO=$(ps aux | grep rsync | grep $LINKBKP)
if [  -z "$RODANDO" ] ; then
  echo "Rsync não está rodando"
  if [ -f "$LOCK"  ]; then
    echo "Arquivo $LOCK existe"
    echo "Removendo arquivo $LOCK"
    rm -rfv $LOCK
  else
    echo "arquivo $LOCK não existe"
  fi
  else
  echo "Rsync já está rodando"
  R=1
fi
}
verifica

# executar
if [ $R -eq 0 ]; then

############################################
backup(){
DIA_SEMANAC=$(date +%A)
DIA_MESC=$(date +%d)

   if [ $DIA_MESC =  $DIA_MES ]; then
    echo $BKP_MES > $DSTDIR/.dias_de_backup_em_nuvem
    rsync -Cravzp `find $DSTDIR -maxdepth 1 -type f -mtime -1 ` --port=$PORTA $LINKBKP::$RSYNC/$lan_mensal/

   elif [ $DIA_SEMANAC =  $DIA_SEMANA ]; then
    echo $BKP_SEMANA > $DSTDIR/.dias_de_backup_em_nuvem
    rsync -Cravzp `find $DSTDIR -maxdepth 1 -type f -mtime -1 ` --port=$PORTA $LINKBKP::$RSYNC/$lan_semanan/

   else
    echo $BKP_DIARIO > $DSTDIR/.dias_de_backup_em_nuvem
    rsync -Cravzp `find $DSTDIR -maxdepth 1 -type f -mtime -1 ` --port=$PORTA $LINKBKP::$RSYNC
   fi

  if [ $? -eq 0 ] ; then
      sucessoNoBackup
     else
      backup
    fi
}
backup >> $LOG
############################################
fi


falhou
footer
unsetVar
}
